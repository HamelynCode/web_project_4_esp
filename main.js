!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,i,o,a){var l,u,c=this,s=e.id,f=e.name,h=e.imgUrl,d=e.likes;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),u=function(){c._deleteCallback()},(l="_btnDeleteCallback")in this?Object.defineProperty(this,l,{value:u,enumerable:!0,configurable:!0,writable:!0}):this[l]=u,this._id=s,this._name=f,this._imgUrl=h,this._info=n,this._likes=d,this._elem=this._getElementFromTemplate(this._info.templateSelector),this._img=this._elem.querySelector(this._info.imgClass),this._btnDelete=this._elem.querySelector(this._info.btnDeleteClass),this._btnLike=this._elem.querySelector(this._info.btnLikeClass),this._likesCount=this._elem.querySelector(this._info.likesCountClass),this._likesCount.textContent=this._likes.length,this._likes.length>0&&this._btnLike.classList.add(this._info.btnLikeActiveClass),this._deleteCallback=i,this._imgCallback=r,this._likeCallback=o,this._handleEventListeners(),a&&this._btnDelete.classList.remove(this._info.btnDeleteHidden)}var n,r;return n=t,(r=[{key:"getElement",value:function(){return this._elem}},{key:"getCardId",value:function(){return this._id}},{key:"setLikes",value:function(e){this._likesCount.textContent=e}},{key:"_getElementFromTemplate",value:function(e){var t=document.querySelector(e).content.querySelector(this._info.cardClass).cloneNode(!0),n=t.querySelector(this._info.imgClass);return n.name=this._name,n.src=this._imgUrl,n.alt=this._name,t.querySelector(this._info.cardTextClass).textContent=this._name,t}},{key:"_handleEventListeners",value:function(){this._btnDeleteClickHandler(),this._imgClickHandler(),this._btnLikeClickHandler()}},{key:"_btnDeleteClickHandler",value:function(){this._btnDelete.addEventListener("click",this._btnDeleteCallback)}},{key:"removeCard",value:function(){this._elem.remove(),this._btnDelete.removeEventListener("click",this._btnDeleteCallback)}},{key:"_imgClickHandler",value:function(){this._img.addEventListener("click",this._imgCallback)}},{key:"_btnLikeClickHandler",value:function(){var e=this;this._btnLike.addEventListener("click",(function(t){t.target.classList.contains(e._info.btnLikeActiveClass)?e._likeCallback(!1).then((function(n){t.target.classList.remove(e._info.btnLikeActiveClass),e._likesCount.textContent=n.likes.length})):e._likeCallback(!0).then((function(n){t.target.classList.add(e._info.btnLikeActiveClass),e._likesCount.textContent=n.likes.length}))}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._form.querySelector(this._config.submitButtonSelector)}var t,r;return t=e,(r=[{key:"checkValidity",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState(this._buttonElement)}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._handleEventListeners()}},{key:"_handleEventListeners",value:function(){var e=this;this._toggleButtonState(this._buttonElement),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(e._buttonElement)}))}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.disabled=!0,this._buttonElement.classList.add(this._config.inactiveButtonClass)):(this._buttonElement.disabled=!1,this._buttonElement.classList.remove(this._config.inactiveButtonClass))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._form.querySelector("#".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a=function(){function e(t,n){var r=this,i=t.popupSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o(this,"_clickOverCallback",(function(e){e.target===r._elem&&r.close()})),o(this,"_btnCloseCallback",(function(e){r.close()})),o(this,"_handleEscClose",(function(e){switch(e.key){case"Esc":case"Escape":r.close()}})),this._elem=document.querySelector(i),this._hiddenClass=n.hiddenClass,this._btnClose=this._elem.querySelector(n.btnClose)}var t,n;return t=e,(n=[{key:"getElement",value:function(){return this._elem}},{key:"open",value:function(){this._elem.classList.remove(this._hiddenClass),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._elem.classList.add(this._hiddenClass)}},{key:"setEventListeners",value:function(){this._elem.addEventListener("click",this._clickOverCallback),this._btnClose.addEventListener("click",this._btnCloseCallback)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(){return c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=s(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(arguments.length<3?e:n):i.value}},c.apply(this,arguments)}function s(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function f(e,t){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},f(e,t)}function h(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return d(e)}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(a,e);var t,n,r,i,o=(r=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(r);if(i){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function a(e,t,n){var r,i,l,u,c=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),u=function(e){r._submitExternalCallback(e)},(l="_submitInternalCallback")in(i=d(r=o.call(this,{popupSelector:c},t)))?Object.defineProperty(i,l,{value:u,enumerable:!0,configurable:!0,writable:!0}):i[l]=u,r._inputList=Array.from(r._elem.querySelectorAll(t.inputSelector)),r._btnSubmit=r._elem.querySelector(t.btnSubmitSelector),r._submitExternalCallback=n,r.setEventListeners(),r}return t=a,(n=[{key:"close",value:function(){c(p(a.prototype),"close",this).call(this),this._elem.reset()}},{key:"setEventListeners",value:function(){this._elem.addEventListener("submit",this._submitInternalCallback),c(p(a.prototype),"setEventListeners",this).call(this)}},{key:"getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){return e[t.name]=t.value})),e}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"setSubmitButtonText",value:function(e){this._btnSubmit.textContent=e}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=v(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(arguments.length<3?e:n):i.value}},m.apply(this,arguments)}function v(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function g(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return C(e)}function C(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,i,o=(r=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(i){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e,t){var n,r,i,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),l=function(e){n.open(e.target)},(i="showElement")in(r=C(n=o.call(this,{popupSelector:e},t)))?Object.defineProperty(r,i,{value:l,enumerable:!0,configurable:!0,writable:!0}):r[i]=l,n._viewImg=n.getElement().querySelector(".view__image"),n._targetName=n.getElement().querySelector(".view__title"),n.setEventListeners(),n}return t=a,(n=[{key:"open",value:function(e){this._viewImg.src=e.src,this._viewImg.alt=e.alt,this._targetName.textContent=e.name,m(w(a.prototype),"open",this).call(this)}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function j(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return P(e)}function P(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=T(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(arguments.length<3?e:n):i.value}},I.apply(this,arguments)}function T(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(a,e);var t,n,r,i,o=(r=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(i){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e,t){var n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),I((n=P(r=o.call(this,{popupSelector:e},t)),x(a.prototype)),"setEventListeners",n).call(n),r}return t=a,(n=[{key:"show",value:function(){this._elem.classList.remove(this._hiddenClass)}},{key:"hide",value:function(){this._elem.classList.add(this._hiddenClass)}},{key:"setSubmitListener",value:function(e){this._elem.addEventListener("submit",e)}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t,n){var r=t.items,i=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=i,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"render",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t,e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector,i=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._dataId="",this._dataName="",this._dataAbout="",this._dataImgUrl="",this._name=document.querySelector(n),this._about=document.querySelector(r),this._avatar=document.querySelector(i),this._avatar.src=this._dataImgUrl}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"getId",value:function(){return this._dataId}},{key:"setInitialData",value:function(e){var t=e.id,n=e.name,r=e.about,i=e.imgUrl;this._dataId=t,this._dataName=n,this._dataAbout=r,this._dataImgUrl=i,this.setUserInfo({name:n,about:r}),this.setUserAvatar(this._dataImgUrl)}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._name.textContent=t,this._about.textContent=n}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t){var n=t.user,r=t.url,i=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._user=n,this._url=r,this._headers=i}var t,n;return t=e,(n=[{key:"_makeRequest",value:function(e,t,n){return fetch("".concat(this._url).concat(t),{method:e,headers:this._headers,body:"GET"!==e?JSON.stringify(n):void 0}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.statusText))}))}},{key:"getUserInfo",value:function(){return this._makeRequest("GET","/users/".concat(this._user))}},{key:"getInitialCards",value:function(){return this._makeRequest("GET","/cards")}},{key:"editProfile",value:function(e,t){return this._makeRequest("PATCH","/users/".concat(this._user),{name:e,about:t})}},{key:"addNewCard",value:function(e,t){return this._makeRequest("POST","/cards",{name:e,link:t})}},{key:"deleteCard",value:function(e){return this._makeRequest("DELETE","/cards/".concat(e))}},{key:"addNewLike",value:function(e){return this._makeRequest("PUT","/cards/likes/".concat(e))}},{key:"removeLike",value:function(e){return this._makeRequest("DELETE","/cards/likes/".concat(e))}},{key:"setProfileImage",value:function(e){return this._makeRequest("PATCH","/users/".concat(this._user,"/avatar"),{avatar:e})}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),N={btnClose:".form__btn-close",hiddenClass:"popup_hidden",inputSelector:".input",btnSubmitSelector:".btn_submit"},H="Guardando...",G="Guardar",F={cardClass:".card",imgClass:".card__image",btnDeleteClass:".btn_delete",btnDeleteHidden:"btn_delete_hidden",btnLikeClass:".btn_like",cardTextClass:".card__text",btnLikeActiveClass:"btn_like_active",templateSelector:"#template-card",likesCountClass:".card__likes-count"},z={formSelector:".form",inputSelector:".input",submitButtonSelector:".form__btn-submit",inactiveButtonClass:"btn_inactive",inputErrorClass:"input_type_error"},J={user:"me",url:"https://around.nomoreparties.co/v1/web_es_cohort_02",headers:{authorization:"43821f01-4b26-43b6-994f-72bfc960dac4","Content-Type":"application/json"}},M=function(e){console.log(e)},K=new A({user:J.user,url:J.url,headers:J.headers}),Q=new E(".view",{hiddenClass:"popup_hidden",btnClose:".view__btn-close"}),W=new R("#form-delete",N),X=new U({nameSelector:".profile__name",aboutSelector:".profile__about",avatarSelector:".profile__avatar"});function Y(e,n,r,i,o){var a=o===e.owner._id;return new t({id:e._id,name:e.name,imgUrl:e.link,likes:e.likes},F,n,r,i,a)}function Z(e){W.setSubmitListener((function(t){t.preventDefault(),K.deleteCard(e.getCardId()).then((function(t){e.removeCard(),W.hide()})).catch(M)})),W.show()}function $(e,t){var n=Y(e,Q.showElement,(function(){Z(n)}),(function(e){return e?K.addNewLike(n.getCardId()):K.removeLike(n.getCardId())}),X.getId());t.addItem(n.getElement())}K.getUserInfo().then((function(e){X.setInitialData({id:e._id,name:e.name,about:e.about,imgUrl:e.avatar});var t=new b({popupSelector:"#form-edit"},N,(function(e){e.preventDefault(),t.setSubmitButtonText(H),K.editProfile(t.getInputValues().name,t.getInputValues().text).then((function(e){K.getUserInfo().then((function(e){X.setUserInfo({name:e.name,about:e.about})})).catch(M).finally((function(){t.close(),t.setSubmitButtonText(G)}))})).catch(M)})),n=t.getElement(),i=new r(z,n);i.enableValidation(),document.querySelector(".btn_edit").addEventListener("click",(function(){var e=X.getUserInfo(),n=e.name,r=e.about;t.setInputValues({name:n,text:r}),i.checkValidity(),t.open()}));var o=new b({popupSelector:"#form-profile-img"},N,(function(){var e=o.getInputValues().text;o.setSubmitButtonText(H),K.setProfileImage(e).then((function(t){X.setUserAvatar(e)})).catch(M).finally((function(){o.close(),o.setSubmitButtonText(G)}))})),a=new r(z,o.getElement());a.enableValidation(),document.querySelector(".profile__edit-cover").addEventListener("click",(function(){a.checkValidity(),o.open()}))})).catch(M).then((function(){return K.getInitialCards().then((function(e){var t=new D({items:e.reverse(),renderer:$},".elements");t.render();var n=new b({popupSelector:"#form-add"},N,(function(e){e.preventDefault();var r=n.getInputValues().name,i=n.getInputValues().text;n.setSubmitButtonText(H),r&&i&&K.addNewCard(r,i).then((function(e){var n=Y(e,Q.showElement,(function(){Z(n)}),(function(e){return e?K.addNewLike(n.getCardId()):K.removeLike(n.getCardId())}),X.getId());t.addItem(n.getElement())})).catch(M).finally((function(){n.close(),n.setSubmitButtonText(G)}))})),i=n.getElement(),o=new r(z,i);o.enableValidation(),document.querySelector(".btn_add").addEventListener("click",(function(){o.checkValidity(),n.open()}))})).catch(M)})).catch(M)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,